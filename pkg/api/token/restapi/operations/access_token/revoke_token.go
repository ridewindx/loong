package access_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RevokeTokenHandlerFunc turns a function with the right signature into a revoke token handler
type RevokeTokenHandlerFunc func(RevokeTokenParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RevokeTokenHandlerFunc) Handle(params RevokeTokenParams) middleware.Responder {
	return fn(params)
}

// RevokeTokenHandler interface for that can handle valid revoke token params
type RevokeTokenHandler interface {
	Handle(RevokeTokenParams) middleware.Responder
}

// NewRevokeToken creates a new http.Handler for the revoke token operation
func NewRevokeToken(ctx *middleware.Context, handler RevokeTokenHandler) *RevokeToken {
	return &RevokeToken{Context: ctx, Handler: handler}
}

/*RevokeToken swagger:route POST /revoke AccessToken revokeToken

Revoke token

This is the URL of the Box revoke endpoint, the endpoint that revokes access tokens, or to put it another way, the endpoint that ends sessions, logging users out.

*/
type RevokeToken struct {
	Context *middleware.Context
	Handler RevokeTokenHandler
}

func (o *RevokeToken) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewRevokeTokenParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
