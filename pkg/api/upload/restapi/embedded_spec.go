package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Box Uploads API allows users to add a new file or add a new file version in the same way as uploading file.",
    "title": "Box 2.0 Uploads API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0"
  },
  "host": "upload.box.com",
  "basePath": "/api/2.0",
  "paths": {
    "/files/content": {
      "post": {
        "description": "Use the Uploads API to allow users to add a new file.",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "FileUpload"
        ],
        "summary": "Upload File",
        "externalDocs": {
          "url": "https://docs.box.com/reference#upload-a-file"
        },
        "operationId": "uploadFile",
        "parameters": [
          {
            "type": "file",
            "description": "File to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "File attributes",
            "name": "attributes",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The upload would be successful",
            "schema": {
              "$ref": "#/definitions/FileList"
            }
          },
          "409": {
            "description": "Name collision occurs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "File upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/upload_sessions": {
      "post": {
        "description": "Use the Uploads API to create a new session to upload a new file.",
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "Create File Upload Session",
        "operationId": "createUploadSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileUploadSessionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The upload session creation would be successful",
            "schema": {
              "$ref": "#/definitions/UploadSession"
            }
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Name collision occurs.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Preconditioned failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "File upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/upload_sessions/{SESSION_ID}": {
      "get": {
        "description": "Return the information about this session.",
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "Upload Session Details",
        "operationId": "getUploadSession",
        "parameters": [
          {
            "type": "string",
            "name": "SESSION_ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get would be successful",
            "schema": {
              "$ref": "#/definitions/UploadSession"
            }
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Get upload session error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Upload a part of the file to this session.",
        "consumes": [
          "application/octet-stream"
        ],
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "Upload Part",
        "operationId": "uploadPart",
        "parameters": [
          {
            "type": "string",
            "name": "SESSION_ID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The message digest of the partbody, formatted as specified by RFC 3230. The usage is sha=BASE64_ENCODED_DIGEST. Currently only SHA-1 is supported.As per RFC 3230, the output from SHA-1 algorithm must be Base64 encoded.",
            "name": "Digest",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Byte range of part within overall file. E.g: bytes 8388608-16777215/445856194. It must not overlap with the range of a part already uploaded to this session.",
            "name": "Content-Range",
            "in": "header",
            "required": true
          },
          {
            "description": "Part bytes",
            "name": "bytes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Part upload would be successful",
            "schema": {
              "$ref": "#/definitions/UploadPartResponse"
            }
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Part conflict. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Preconditioned failed. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "416": {
            "description": "Request range bit satisfiable. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Part upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Abort the upload session and discard all data uploaded. This cannot be reversed.",
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "Abort Upload Session",
        "operationId": "abortUploadSession",
        "parameters": [
          {
            "type": "string",
            "name": "SESSION_ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Abort would be successful"
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Get upload session error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/upload_sessions/{SESSION_ID}/commit": {
      "post": {
        "description": "Create a Box file comprised of the uploaded parts.",
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "Commit Upload",
        "operationId": "commitUploadSession",
        "parameters": [
          {
            "type": "string",
            "name": "SESSION_ID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The message digest of the file, formatted as specified by RFC 3230. The usage is sha=BASE64_ENCODED_DIGEST. Currently only SHA-1 is supported.As per RFC 3230, the output from SHA-1 algorithm must be Base64 encoded.",
            "name": "Digest",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "This is in the ‘etag’ field of the file object. See https://developer.box.com/v2.0/reference#if-match",
            "name": "If-Match",
            "in": "header"
          },
          {
            "type": "string",
            "description": "This is in the ‘etag’ field of the file object. See https://developer.box.com/v2.0/reference#if-match",
            "name": "If-Non-Match",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommitRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The file has been committed successfully",
            "schema": {
              "$ref": "#/definitions/FileList"
            }
          },
          "202": {
            "description": "All parts have been uploaded but not yet processed. Use Get Upload Session API to get more information about the progress of processing the parts. Retry commit afterwards",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "description": "Indicates the number of seconds the client should wait before attempting their commit request again."
              }
            }
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "There is already a file with the same name in the target folder.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "The If-Match condition failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Part upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/upload_sessions/{SESSION_ID}/parts": {
      "get": {
        "description": "Return the list of parts uploaded so far for this session.",
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "List Parts",
        "operationId": "listParts",
        "parameters": [
          {
            "type": "string",
            "name": "SESSION_ID",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Zero-based index of first part to return. Defaults to zero, if not specified.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "How many parts to return. Defaults to 1000 if not specified, which is also the maximum value allowed.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List would be successful",
            "schema": {
              "$ref": "#/definitions/PartList"
            }
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Upload commit error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/{FILE_ID}/content": {
      "post": {
        "description": "This method is used to upload a new version of an existing file in a user’s account. ",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "FileUpload"
        ],
        "summary": "Upload File Version",
        "externalDocs": {
          "url": "https://docs.box.com/reference#upload-a-new-version-of-a-file"
        },
        "operationId": "uploadFileVersion",
        "parameters": [
          {
            "type": "string",
            "name": "FILE_ID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "This is in the ‘etag’ field of the file object",
            "name": "If-Match",
            "in": "header"
          },
          {
            "type": "string",
            "description": "File attributes",
            "name": "attributes",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "File to upload",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The upload would be successful",
            "schema": {
              "$ref": "#/definitions/FileList"
            }
          },
          "default": {
            "description": "File upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/{FILE_ID}/upload_sessions": {
      "post": {
        "description": "Use the Uploads API to create a new session to upload a new version of existing file.",
        "tags": [
          "SuperchargedUpload"
        ],
        "summary": "Create File Upload Session",
        "operationId": "createUploadSessionNewVersion",
        "parameters": [
          {
            "type": "string",
            "name": "FILE_ID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VersionUploadSessionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The upload session creation would be successful",
            "schema": {
              "$ref": "#/definitions/UploadSession"
            }
          },
          "400": {
            "description": "Bad request. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Name collision occurs. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Preconditioned failed. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large. See response body for details.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "File upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BoxFile": {
      "description": "File information describe file objects in Box, with attributes like who created the file, when it was last modified, and other information. The actual content of the file itself is accessible through the /files/{id}/content endpoint.",
      "type": "object",
      "title": "File Object",
      "allOf": [
        {
          "$ref": "#/definitions/FileReference"
        },
        {
          "properties": {
            "collections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Collection"
              }
            },
            "comment_count": {
              "description": "The number of comments on a file.",
              "type": "integer",
              "format": "int64"
            },
            "content_created_at": {
              "description": "When the content of this file was created (more info).",
              "type": "string",
              "format": "date-time"
            },
            "content_modified_at": {
              "description": "When the content of this file was last modified (more info).",
              "type": "string",
              "format": "date-time"
            },
            "created_at": {
              "description": "When this file was created on Box’s servers.",
              "type": "string",
              "format": "date-time"
            },
            "created_by": {
              "description": "The user who first created file.",
              "$ref": "#/definitions/UserReference"
            },
            "description": {
              "description": "The description of this file.",
              "type": "string"
            },
            "expiring_embed_link": {
              "description": "An expiring URL for an embedded preview session in an iframe. This URL will expire after 60 seconds and the session will expire after 60 minutes.",
              "type": "string"
            },
            "extension": {
              "description": "Indicates the suffix, when available, on the file. By default, set to an empty string. The suffix usually indicates the encoding (file format) of the file contents or usage.",
              "type": "string"
            },
            "file_version": {
              "$ref": "#/definitions/FileVersionReference"
            },
            "is_package": {
              "description": "Whether the file is a package. Used for Mac Packages used by iWorks.",
              "type": "boolean"
            },
            "item_status": {
              "description": "Whether this item is deleted or not.",
              "type": "string"
            },
            "lock": {
              "$ref": "#/definitions/Lock"
            },
            "modified_at": {
              "description": "When this file was last updated on the Box servers.",
              "type": "string",
              "format": "date-time"
            },
            "modified_by": {
              "description": "The user who last updated this file.",
              "$ref": "#/definitions/UserReference"
            },
            "owned_by": {
              "description": "The user who owns this file.",
              "$ref": "#/definitions/UserReference"
            },
            "parent": {
              "description": "The folder containing this file.",
              "$ref": "#/definitions/ItemReference"
            },
            "path_collection": {
              "description": "The path of folders to this file, starting at the root.",
              "$ref": "#/definitions/PathCollection"
            },
            "permissions": {
              "$ref": "#/definitions/FilePermissions"
            },
            "purged_at": {
              "description": "When this file will be permanently deleted.",
              "type": "string",
              "format": "date-time"
            },
            "shared_link": {
              "$ref": "#/definitions/SharedLink"
            },
            "size": {
              "description": "Size of this file in bytes.",
              "type": "integer",
              "format": "int64"
            },
            "tags": {
              "description": "All tags applied to this file.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trashed_at": {
              "description": "When this file was last moved to the trash.",
              "type": "string",
              "format": "date-time"
            },
            "version_number": {
              "description": "The version number of the file.",
              "type": "string"
            },
            "watermark_info": {
              "$ref": "#/definitions/WatermarkInfo"
            }
          }
        }
      ]
    },
    "Collection": {
      "description": "Collections contain information about the items contained inside of them, including files and folders. The only collection available currently is a “Favorites” collection. The contents of the collection are discovered in a similar way in which the contents of a folder are discovered.",
      "type": "object",
      "title": "Collection Object",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "collection_type": {
              "description": "The type of the collection. This is used to determine the proper visual treatment for Box-internally created collections. Initially only “favorites” collection-type will be supported.",
              "type": "string",
              "enum": [
                "favorites"
              ]
            },
            "name": {
              "description": "The name of this collection. The only collection currently available is named “Favorites”",
              "type": "string"
            }
          }
        }
      ]
    },
    "CommitRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Optional. An array of attributes to set on the created file. See https://box-content.readme.io/reference#file-object",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "parts": {
          "description": "An arrayof Part objects. MUST be ordered by offset.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Part"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "context_info": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "help-url": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "request-id": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "error"
          ]
        }
      }
    },
    "FileList": {
      "description": "A collection Tasks.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoxFile"
              }
            }
          }
        }
      ]
    },
    "FilePermissions": {
      "description": "The permissions that the current user has on the file",
      "type": "object",
      "properties": {
        "can_download": {
          "type": "boolean"
        },
        "can_invite_collaborator": {
          "type": "boolean"
        },
        "can_preview": {
          "type": "boolean"
        },
        "can_rename": {
          "type": "boolean"
        },
        "can_set_share_access": {
          "type": "boolean"
        },
        "can_share": {
          "type": "boolean"
        },
        "can_upload": {
          "type": "boolean"
        },
        "cand_delete": {
          "type": "boolean"
        }
      }
    },
    "FileReference": {
      "description": "It references either a file or a folder",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ItemReference"
        },
        {
          "properties": {
            "sha1": {
              "description": "The sha1 hash of this file.",
              "type": "string"
            }
          }
        }
      ]
    },
    "FileUploadSessionRequest": {
      "type": "object",
      "properties": {
        "file_name": {
          "description": "Name of new file",
          "type": "string"
        },
        "file_size": {
          "description": "The total number of bytes in the file to be uploaded",
          "type": "integer",
          "format": "int64"
        },
        "folder_id": {
          "description": "The ID of the folder that will contain the new file",
          "type": "string"
        }
      }
    },
    "FileVersionReference": {
      "description": "The version information of the file.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "sha1": {
              "description": "The sha1 hash of this file.",
              "type": "string"
            }
          }
        }
      ]
    },
    "ItemReference": {
      "description": "It references either a file or a folder",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "etag": {
              "description": "A unique string identifying the version of this folder.\nMay be null for some folders such as root or trash.",
              "type": "string"
            },
            "name": {
              "description": "The name of the folder.",
              "type": "string"
            },
            "sequence_id": {
              "description": "A unique ID for use with the /events endpoint.\nMay be null for some folders such as root or trash.",
              "type": "string"
            }
          }
        }
      ]
    },
    "Lock": {
      "description": "The lock held on the file.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "created_by": {
              "$ref": "#/definitions/UserReference"
            },
            "expired_at": {
              "type": "string",
              "format": "date-time"
            },
            "is_download_prevented": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "by": {
                "type": "string"
              },
              "direction": {
                "type": "string"
              }
            }
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Part": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "part_id": {
          "type": "string"
        },
        "sha1": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PartList": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "An array of parts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Part"
          }
        },
        "limit": {
          "description": "The limit that was used for these entries. This will be the same as the limit query parameter unless that value exceeded the maximum value allowed.",
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "description": "The 0-based offset of the first entry in this set. This will be the same as the offset query parameter.",
          "type": "integer",
          "format": "int32"
        },
        "total_count": {
          "description": "This will always be equal to the number of expected parts in the session (i.e. ceiling(file size / part size)).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PathCollection": {
      "description": "The path of folders, starting at the root.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemReference"
              }
            }
          }
        }
      ]
    },
    "Reference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "folder",
            "file",
            "user",
            "file_version",
            "lock",
            "collaboration",
            "comment",
            "task",
            "web_link",
            "collection",
            "task_assignment",
            "event",
            "realtime_server",
            "webhook_event",
            "webhook",
            "enterprise",
            "invite",
            "email_alias",
            "group",
            "group_membership",
            "device_pinner",
            "retention_policy",
            "retention_policy_assignment",
            "file_version_retention",
            "legal_hold_policy",
            "legal_hold_policy_assignment",
            "legal_hold",
            "upload_session"
          ]
        }
      }
    },
    "SharedLink": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "download_count": {
          "type": "integer",
          "format": "int64"
        },
        "download_url": {
          "type": "string"
        },
        "effective_access": {
          "type": "string"
        },
        "is_password_enabled": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/SharedLinkPermissions"
        },
        "preview_count": {
          "type": "integer",
          "format": "int64"
        },
        "unshared_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "vanity_url": {
          "type": "string"
        }
      }
    },
    "SharedLinkPermissions": {
      "type": "object",
      "properties": {
        "can_download": {
          "type": "boolean"
        },
        "can_preview": {
          "type": "boolean"
        }
      }
    },
    "UploadPartResponse": {
      "type": "object",
      "properties": {
        "part": {
          "$ref": "#/definitions/Part"
        }
      }
    },
    "UploadSession": {
      "description": "Upload Session.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "num_parts_processed": {
              "description": "Tracks Box’s progress in processing all the parts that have been uploaded. Always equal to 0 when creating new upload session. In other cases, this will be the number of parts that have been processed by server. When all parts have been uploaded, but Commit API returned 202, you can check this value == total_parts to check if file was uploaded.",
              "type": "integer",
              "format": "int32"
            },
            "part_size": {
              "description": "The part size in bytes that must be used for all parts of this session. Only the last part is allowed to be of a smaller size.",
              "type": "integer",
              "format": "int64"
            },
            "session_endpoints": {
              "$ref": "#/definitions/UploadSessionEndpoints"
            },
            "session_expires_at": {
              "description": "UTC Time in RFC 3339 date timeformat: 2016-04-17T09:12:36-00:00.",
              "type": "string",
              "format": "date-time"
            },
            "total_parts": {
              "description": "The total number of parts expected in this session, as determined by the file size and part size.",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "UploadSessionEndpoints": {
      "description": "URLs for all other possible calls to this session.",
      "type": "object",
      "properties": {
        "abort": {
          "description": "The URL for abort API.",
          "type": "string"
        },
        "commit": {
          "description": "The URL for commit API.",
          "type": "string"
        },
        "list_parts": {
          "description": "The URL for list parts API.",
          "type": "string"
        },
        "log_event": {
          "description": "The URL for log event API.",
          "type": "string"
        },
        "status": {
          "description": "The URL for status API.",
          "type": "string"
        },
        "upload_part": {
          "description": "The URL for upload part API.",
          "type": "string"
        }
      }
    },
    "UserReference": {
      "description": "It references a user",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unqiue string identifying this user.",
          "type": "string"
        },
        "login": {
          "description": "The email address this user uses to login.",
          "type": "string"
        },
        "name": {
          "description": "Name of this user",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "user"
          ]
        }
      }
    },
    "VersionUploadSessionRequest": {
      "type": "object",
      "properties": {
        "file_name": {
          "description": "Name of new file",
          "type": "string"
        },
        "file_size": {
          "description": "The total number of bytes in the file to be uploaded",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WatermarkInfo": {
      "type": "array",
      "items": {
        "properties": {
          "is_watermarked": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
      "tokenUrl": "https://api.box.com/oauth2/token"
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ]
}`))
}
