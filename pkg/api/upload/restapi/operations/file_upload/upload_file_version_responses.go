package file_upload

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ridewindx/loong/pkg/api/upload/models"
)

// UploadFileVersionOKCode is the HTTP code returned for type UploadFileVersionOK
const UploadFileVersionOKCode int = 200

/*UploadFileVersionOK The upload would be successful

swagger:response uploadFileVersionOK
*/
type UploadFileVersionOK struct {

	/*
	  In: Body
	*/
	Payload *models.FileList `json:"body,omitempty"`
}

// NewUploadFileVersionOK creates UploadFileVersionOK with default headers values
func NewUploadFileVersionOK() *UploadFileVersionOK {
	return &UploadFileVersionOK{}
}

// WithPayload adds the payload to the upload file version o k response
func (o *UploadFileVersionOK) WithPayload(payload *models.FileList) *UploadFileVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload file version o k response
func (o *UploadFileVersionOK) SetPayload(payload *models.FileList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadFileVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UploadFileVersionDefault File upload error

swagger:response uploadFileVersionDefault
*/
type UploadFileVersionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadFileVersionDefault creates UploadFileVersionDefault with default headers values
func NewUploadFileVersionDefault(code int) *UploadFileVersionDefault {
	if code <= 0 {
		code = 500
	}

	return &UploadFileVersionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the upload file version default response
func (o *UploadFileVersionDefault) WithStatusCode(code int) *UploadFileVersionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the upload file version default response
func (o *UploadFileVersionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the upload file version default response
func (o *UploadFileVersionDefault) WithPayload(payload *models.Error) *UploadFileVersionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload file version default response
func (o *UploadFileVersionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadFileVersionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
